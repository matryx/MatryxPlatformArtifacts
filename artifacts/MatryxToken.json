{
  "contractName": "MatryxToken",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "setTransferAgent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setReleaseAgent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "upgradeAgent",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "releaseTokenTransfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "upgradeMaster",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getUpgradeState",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "transferAgents",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "released",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalUpgraded",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "releaseAgent",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "setUpgradeAgent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "master",
          "type": "address"
        }
      ],
      "name": "setUpgradeMaster",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Upgrade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "UpgradeAgentSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061015e5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166302f652a3811461016357806305d2035b146101ad57806306fdde03146101d6578063095ea7b31461026057806318160ddd146102a657806323b872dd146102cd57806329ff4f531461031d578063313ce5671461035d57806340c10f191461037257806345977d03146103b85780635de4ccb0146103e25780635f412d4f14610420578063600440cb1461043557806370a082311461044a5780637d64bcb41461048a5780638444b3911461049f578063867c2857146104d85780638da5cb5b1461051857806395d89b411461052d5780639613252114610542578063a9059cbb14610557578063c752ff621461059d578063d1f276d3146105b2578063d7e7088a146105c7578063dd62ed3e14610607578063f2fde38b1461064f578063ffeb7d751461068f575b600080fd5b34801561016f57600080fd5b506101ab6004803603604081101561018657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013515156106cf565b005b3480156101b957600080fd5b506101c2610775565b604080519115158252519081900360200190f35b3480156101e257600080fd5b506101eb61077e565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561022557818101518382015260200161020d565b50505050905090810190601f1680156102525780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561026c57600080fd5b506101c26004803603604081101561028357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561082a565b3480156102b257600080fd5b506102bb6108e6565b60408051918252519081900360200190f35b3480156102d957600080fd5b506101c2600480360360608110156102f057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356108ec565b34801561032957600080fd5b506101ab6004803603602081101561034057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661095e565b34801561036957600080fd5b506102bb6109f5565b34801561037e57600080fd5b506101c26004803603604081101561039557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356109fb565b3480156103c457600080fd5b506101ab600480360360208110156103db57600080fd5b5035610b32565b3480156103ee57600080fd5b506103f7610cbd565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561042c57600080fd5b506101ab610cd9565b34801561044157600080fd5b506103f7610d3e565b34801561045657600080fd5b506102bb6004803603602081101561046d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610d5f565b34801561049657600080fd5b506101c2610d87565b3480156104ab57600080fd5b506104b4610e07565b604051808260048111156104c457fe5b60ff16815260200191505060405180910390f35b3480156104e457600080fd5b506101c2600480360360208110156104fb57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610e4a565b34801561052457600080fd5b506103f7610e5f565b34801561053957600080fd5b506101eb610e7b565b34801561054e57600080fd5b506101c2610ef4565b34801561056357600080fd5b506101c26004803603604081101561057a57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610f15565b3480156105a957600080fd5b506102bb610f85565b3480156105be57600080fd5b506103f7610f8b565b3480156105d357600080fd5b506101ab600480360360208110156105ea57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610fa7565b34801561061357600080fd5b506102bb6004803603604081101561062a57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166111ef565b34801561065b57600080fd5b506101ab6004803603602081101561067257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611227565b34801561069b57600080fd5b506101ab600480360360208110156106b257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166112b4565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106f357600080fd5b60045460009074010000000000000000000000000000000000000000900460ff161561071e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff91909116600090815260056020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60065460ff1681565b6009805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f810184900484028201840190925281815292918301828280156108225780601f106107f757610100808354040283529160200191610822565b820191906000526020600020905b81548152906001019060200180831161080557829003601f168201915b505050505081565b6000811580610867575033600090815260036020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152902054155b151561087257600080fd5b33600081815260036020908152604080832073ffffffffffffffffffffffffffffffffffffffff881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60015481565b600454600090849074010000000000000000000000000000000000000000900460ff168061093f575073ffffffffffffffffffffffffffffffffffffffff811660009081526005602052604090205460ff165b151561094a57600080fd5b61095585858561134b565b95945050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461098257600080fd5b60045460009074010000000000000000000000000000000000000000900460ff16156109ad57600080fd5b50600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600b5481565b6000805473ffffffffffffffffffffffffffffffffffffffff163314610a2057600080fd5b60065460ff1615610a3057600080fd5b600154610a43908363ffffffff61148e16565b60015573ffffffffffffffffffffffffffffffffffffffff8316600090815260026020526040902054610a7c908363ffffffff61148e16565b73ffffffffffffffffffffffffffffffffffffffff8416600081815260026020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a260408051838152905173ffffffffffffffffffffffffffffffffffffffff8516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b6000610b3c610e07565b90506003816004811115610b4c57fe5b1480610b6357506004816004811115610b6157fe5b145b1515610b6e57600080fd5b811515610b7a57600080fd5b33600090815260026020526040902054610b9a908363ffffffff6114a416565b33600090815260026020526040902055600154610bbd908363ffffffff6114a416565b600155600854610bd3908363ffffffff61148e16565b600855600754604080517f753e88e500000000000000000000000000000000000000000000000000000000815233600482015260248101859052905173ffffffffffffffffffffffffffffffffffffffff9092169163753e88e59160448082019260009290919082900301818387803b158015610c4f57600080fd5b505af1158015610c63573d6000803e3d6000fd5b505060075460408051868152905173ffffffffffffffffffffffffffffffffffffffff90921693503392507f7e5c344a8141a805725cb476f76c6953b842222b967edd1f78ddb6e8b3f397ac919081900360200190a35050565b60075473ffffffffffffffffffffffffffffffffffffffff1681565b60045473ffffffffffffffffffffffffffffffffffffffff163314610cfd57600080fd5b600480547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b600654610100900473ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205490565b6000805473ffffffffffffffffffffffffffffffffffffffff163314610dac57600080fd5b600680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a15060015b90565b60075460009073ffffffffffffffffffffffffffffffffffffffff161515610e3157506002610e04565b6008541515610e4257506003610e04565b506004610e04565b60056020526000908152604090205460ff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600a805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f810184900484028201840190925281815292918301828280156108225780601f106107f757610100808354040283529160200191610822565b60045474010000000000000000000000000000000000000000900460ff1681565b600454600090339074010000000000000000000000000000000000000000900460ff1680610f68575073ffffffffffffffffffffffffffffffffffffffff811660009081526005602052604090205460ff165b1515610f7357600080fd5b610f7d84846114b6565b949350505050565b60085481565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff81161515610fc957600080fd5b600654610100900473ffffffffffffffffffffffffffffffffffffffff163314610ff257600080fd5b6004610ffc610e07565b600481111561100757fe5b141561101257600080fd5b600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8381169190911791829055604080517f61d3d7a6000000000000000000000000000000000000000000000000000000008152905192909116916361d3d7a691600480820192602092909190829003018186803b1580156110ac57600080fd5b505afa1580156110c0573d6000803e3d6000fd5b505050506040513d60208110156110d657600080fd5b505115156110e357600080fd5b600154600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634b2ba0dd6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561116a57600080fd5b505afa15801561117e573d6000803e3d6000fd5b505050506040513d602081101561119457600080fd5b5051146111a057600080fd5b6007546040805173ffffffffffffffffffffffffffffffffffffffff9092168252517f7845d5aa74cc410e35571258d954f23b82276e160fe8c188fa80566580f279cc9181900360200190a150565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260036020908152604080832093909416825291909152205490565b60005473ffffffffffffffffffffffffffffffffffffffff16331461124b57600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116151561126d57600080fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff811615156112d657600080fd5b600654610100900473ffffffffffffffffffffffffffffffffffffffff1633146112ff57600080fd5b6006805473ffffffffffffffffffffffffffffffffffffffff909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff80841660009081526003602090815260408083203384528252808320549386168352600290915281205490919061139d908463ffffffff61148e16565b73ffffffffffffffffffffffffffffffffffffffff80861660009081526002602052604080822093909355908716815220546113df908463ffffffff6114a416565b73ffffffffffffffffffffffffffffffffffffffff8616600090815260026020526040902055611415818463ffffffff6114a416565b73ffffffffffffffffffffffffffffffffffffffff808716600081815260036020908152604080832033845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3506001949350505050565b60008282018381101561149d57fe5b9392505050565b6000828211156114b057fe5b50900390565b336000908152600260205260408120546114d6908363ffffffff6114a416565b336000908152600260205260408082209290925573ffffffffffffffffffffffffffffffffffffffff851681522054611515908363ffffffff61148e16565b73ffffffffffffffffffffffffffffffffffffffff84166000818152600260209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060019291505056fea165627a7a7230582066be8591607199849ffc552e6d826b76157c0d137ee6b9a38a883c2382ef53380029",
  "sourceMap": "667:28:14:-;;;-1:-1:-1;;;;;;667:28:14;;;472:35:13;;;-1:-1:-1;;472:35:13;;;183:34:12;123:277;183:34;;123:277;183:34;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;221:28:12;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;276:2;253:25;;342:56;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;406:5:19;:18;;380:10:12;-1:-1:-1;;;;;;406:18:19;;;;;;;;1723:13:16;:30;;-1:-1:-1;;;;;;1723:30:16;406:18:19;1723:30:16;;;;;;;;;123:277:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;123:277:12;;;-1:-1:-1;123:277:12;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "123:277:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1955:130:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1955:130:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1955:130:14;;;;;;;;;;;;;;472:35:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;472:35:13;;;;;;;;;;;;;;;;;;;;;;183:34:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;183:34:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;183:34:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1857:546:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1857:546:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1857:546:15;;;;;;;;;;178:26:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;178:26:10;;;;;;;;;;;;;;;;;;;;2590:209:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2590:209:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2590:209:14;;;;;;;;;;;;;;;;;;;1608:219;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1608:219:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1608:219:14;;;;;253:25:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;253:25:12;;;;810:272:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;810:272:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;810:272:13;;;;;;;;;;1853:593:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1853:593:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1853:593:16;;;782:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;782:32:16;;;;;;;;;;;;;;;;;;;;;;;2321:82:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2321:82:14;;;;687:28:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;687:28:16;;;;483:107:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;483:107:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;483:107:8;;;;;1196:132:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1196:132:13;;;;3145:258:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3145:258:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;864:47:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;864:47:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;864:47:14;;;;;237:20:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:20:19;;;;221:28:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;221:28:12;;;;667::14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;667:28:14;;;;2407:179;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2407:179:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2407:179:14;;;;;;;;;;869:28:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;869:28:16;;;;515:27:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;515:27:14;;;;2501:587:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2501:587:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2501:587:16;;;;;2721:136:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2721:136:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2721:136:15;;;;;;;;;;;;739:126:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;739:126:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;739:126:19;;;;;3522:165:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3522:165:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3522:165:16;;;;;1955:130:14;559:5:19;;;;545:10;:19;537:28;;;;;;1253:8:14;;2032:5;;1253:8;;;;;1237:24;1229:33;;;;;;-1:-1:-1;2052:20:14;;;;;;;;;:14;:20;;;;;:28;;;;;;;;;;;;;1955:130::o;472:35:13:-;;;;;;:::o;183:34:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1857:546:15:-;1924:4;2234:11;;;2233:53;;-1:-1:-1;2259:10:15;2251:19;;;;:7;:19;;;;;;;;;:29;;;;;;;;;;:34;2233:53;2225:62;;;;;;;;2302:10;2294:19;;;;:7;:19;;;;;;;;;:29;;;;;;;;;;;;:38;;;2343;;;;;;;2294:29;;2302:10;2343:38;;;;;;;;;;;-1:-1:-1;2394:4:15;1857:546;;;;:::o;178:26:10:-;;;;:::o;2590:209:14:-;1040:8;;2688:12;;2665:5;;1040:8;;;;;;:35;;-1:-1:-1;1052:23:14;;;;;;;:14;:23;;;;;;;;1040:35;1032:44;;;;;;;;2756:38;2775:5;2782:3;2787:6;2756:18;:38::i;:::-;2749:45;2590:209;-1:-1:-1;;;;;2590:209:14:o;1608:219::-;559:5:19;;;;545:10;:19;537:28;;;;;;1253:8:14;;1672:5;;1253:8;;;;;1237:24;1229:33;;;;;;-1:-1:-1;1803:12:14;:19;;;;;;;;;;;;;;;1608:219::o;253:25:12:-;;;;:::o;810:272:13:-;888:4;559:5:19;;;;545:10;:19;537:28;;;;;;546:15:13;;;;545:16;537:25;;;;;;914:11;;:24;;930:7;914:24;:15;:24;:::i;:::-;900:11;:38;960:13;;;;;;;:8;:13;;;;;;:26;;978:7;960:26;:17;:26;:::i;:::-;944:13;;;;;;;:8;:13;;;;;;;;;:42;;;;997:18;;;;;;;944:13;;997:18;;;;;;;;;1026:34;;;;;;;;;;;;1043:1;;1026:34;;;;;;;;;-1:-1:-1;1073:4:13;810:272;;;;:::o;1853:593:16:-;1901:18;1922:17;:15;:17::i;:::-;1901:38;-1:-1:-1;1964:27:16;1955:5;:36;;;;;;;;;:71;;;-1:-1:-1;2004:22:16;1995:5;:31;;;;;;;;;1955:71;1947:80;;;;;;;;2075:10;;;2067:19;;;;;;2127:10;2118:20;;;;:8;:20;;;;;;:31;;2143:5;2118:31;:24;:31;:::i;:::-;2104:10;2095:20;;;;:8;:20;;;;;:54;2214:11;;:22;;2230:5;2214:22;:15;:22;:::i;:::-;2200:11;:36;2260:13;;:24;;2278:5;2260:24;:17;:24;:::i;:::-;2244:13;:40;2336:12;;:43;;;;;;2361:10;2336:43;;;;;;;;;;;;:12;;;;;:24;;:43;;;;;:12;;:43;;;;;;;;:12;;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;2336:43:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2420:12:16;;2392:49;;;;;;;;2420:12;;;;;-1:-1:-1;2400:10:16;;-1:-1:-1;2392:49:16;;;;;;;;;;1853:593;;:::o;782:32::-;;;;;;:::o;2321:82:14:-;1407:12;;;;1393:10;:26;1385:35;;;;;;2383:8;:15;;;;;;;;2321:82::o;687:28:16:-;;;;;;;;;:::o;483:107:8:-;569:16;;539:15;569:16;;;:8;:16;;;;;;;483:107::o;1196:132:13:-;1247:4;559:5:19;;;;545:10;:19;537:28;;;;;;1259:15:13;:22;;;;1277:4;1259:22;;;1292:14;;;;1259:15;;1292:14;-1:-1:-1;1319:4:13;571:1:19;1196:132:13;:::o;3145:258:16:-;3223:12;;3192;;3215:38;3223:12;3215:38;3212:186;;;-1:-1:-1;3262:28:16;3255:35;;3212:186;3304:13;;:18;3301:97;;;-1:-1:-1;3331:27:16;3324:34;;3301:97;-1:-1:-1;3376:22:16;3369:29;;864:47:14;;;;;;;;;;;;;;;:::o;237:20:19:-;;;;;;:::o;221:28:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;667::14;;;;;;;;;:::o;2407:179::-;1040:8;;2491:12;;2463:10;;1040:8;;;;;;:35;;-1:-1:-1;1052:23:14;;;;;;;:14;:23;;;;;;;;1040:35;1032:44;;;;;;;;2554:27;2569:3;2574:6;2554:14;:27::i;:::-;2547:34;2407:179;-1:-1:-1;;;;2407:179:14:o;869:28:16:-;;;;:::o;515:27:14:-;;;;;;:::o;2501:587:16:-;2567:19;;;;;2559:28;;;;;;2669:13;;;;;;;2655:10;:27;2647:36;;;;;;2768:22;2747:17;:15;:17::i;:::-;:43;;;;;;;;;;2739:52;;;;;;2800:12;:34;;;;;;;;;;;;;;;;2874:29;;;;;;;;:12;;;;;:27;;:29;;;;;;;;;;;;;;;:12;:29;;;5:2:-1;;;;30:1;27;20:12;5:2;2874:29:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2874:29:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2874:29:16;2866:38;;;;;;;;3019:11;;2986:12;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2986:29:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2986:29:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2986:29:16;:44;2978:53;;;;;;3069:12;;3045:38;;;3069:12;;;;3045:38;;;;;;;;;;;;2501:587;:::o;2721:136:15:-;2827:15;;;;2795:17;2827:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2721:136::o;739:126:19:-;559:5;;;;545:10;:19;537:28;;;;;;815:22;;;;;807:31;;;;;;844:5;:16;;;;;;;;;;;;;;;739:126::o;3522:165:16:-;3587:20;;;;;3579:29;;;;;;3638:13;;;;;;;3624:10;:27;3616:36;;;;;;3660:13;:22;;;;;;;;;;;;;;;;;;3522:165::o;1121:505:15:-;1236:14;;;;1203:4;1236:14;;;:7;:14;;;;;;;;1251:10;1236:26;;;;;;;;1432:13;;;;;:8;:13;;;;;;1203:4;;1236:26;1432:25;;1450:6;1432:25;:17;:25;:::i;:::-;1416:13;;;;;;;;:8;:13;;;;;;:41;;;;1481:15;;;;;;;:27;;1501:6;1481:27;:19;:27;:::i;:::-;1463:15;;;;;;;:8;:15;;;;;:45;1543:22;:10;1558:6;1543:22;:14;:22;:::i;:::-;1514:14;;;;;;;;:7;:14;;;;;;;;1529:10;1514:26;;;;;;;;:51;;;;1576:28;;;;;;;;;;;1514:14;;1576:28;;;;;;;;;;;-1:-1:-1;1617:4:15;;1121:505;-1:-1:-1;;;;1121:505:15:o;667:129:18:-;725:7;752:5;;;770:6;;;;763:14;;;;790:1;667:129;-1:-1:-1;;;667:129:18:o;553:110::-;611:7;633:6;;;;626:14;;;;-1:-1:-1;653:5:18;;;553:110::o;605:243:15:-;712:10;668:4;703:20;;;:8;:20;;;;;;:32;;728:6;703:32;:24;:32;:::i;:::-;689:10;680:20;;;;:8;:20;;;;;;:55;;;;:20;757:13;;;;;;:25;;775:6;757:25;:17;:25;:::i;:::-;741:13;;;;;;;:8;:13;;;;;;;;;:41;;;;793:33;;;;;;;741:13;;802:10;;793:33;;;;;;;;;;-1:-1:-1;839:4:15;605:243;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./MintableToken.sol\";\nimport \"./UpgradeableToken.sol\";\n\n/**\n * Matryx Ethereum token.\n */\ncontract MatryxToken is MintableToken, UpgradeableToken{\n\n  string public name = \"MatryxToken\";\n  string public symbol = \"MTX\";\n  uint public decimals = 18;\n\n  // supply upgrade owner as the contract creation account\n  constructor() public UpgradeableToken(msg.sender) {\n\n  }\n}\n",
  "sourcePath": "/Users/maxhoward/Desktop/Ethereum/MatryxPlatform/contracts/MatryxToken/MatryxToken.sol",
  "ast": {
    "absolutePath": "/Users/maxhoward/Desktop/Ethereum/MatryxPlatform/contracts/MatryxToken/MatryxToken.sol",
    "exportedSymbols": {
      "MatryxToken": [
        3688
      ]
    },
    "id": 3689,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3664,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/Users/maxhoward/Desktop/Ethereum/MatryxPlatform/contracts/MatryxToken/MintableToken.sol",
        "file": "./MintableToken.sol",
        "id": 3665,
        "nodeType": "ImportDirective",
        "scope": 3689,
        "sourceUnit": 3779,
        "src": "25:29:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/maxhoward/Desktop/Ethereum/MatryxPlatform/contracts/MatryxToken/UpgradeableToken.sol",
        "file": "./UpgradeableToken.sol",
        "id": 3666,
        "nodeType": "ImportDirective",
        "scope": 3689,
        "sourceUnit": 4320,
        "src": "55:32:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3667,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3778,
              "src": "147:13:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$3778",
                "typeString": "contract MintableToken"
              }
            },
            "id": 3668,
            "nodeType": "InheritanceSpecifier",
            "src": "147:13:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3669,
              "name": "UpgradeableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4319,
              "src": "162:16:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradeableToken_$4319",
                "typeString": "contract UpgradeableToken"
              }
            },
            "id": 3670,
            "nodeType": "InheritanceSpecifier",
            "src": "162:16:12"
          }
        ],
        "contractDependencies": [
          3778,
          4319,
          4098,
          3916,
          3603,
          3615,
          3542,
          4516
        ],
        "contractKind": "contract",
        "documentation": "Matryx Ethereum token.",
        "fullyImplemented": true,
        "id": 3688,
        "linearizedBaseContracts": [
          3688,
          4319,
          3778,
          3916,
          4098,
          3542,
          3615,
          3603,
          4516
        ],
        "name": "MatryxToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3673,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 3688,
            "src": "183:34:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3671,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "183:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4d6174727978546f6b656e",
              "id": 3672,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "204:13:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d4990ed837f843053004d1f3c23c420f6d540e4987dd7c8438c616e04e528abd",
                "typeString": "literal_string \"MatryxToken\""
              },
              "value": "MatryxToken"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3676,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 3688,
            "src": "221:28:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3674,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "221:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4d5458",
              "id": 3675,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "244:5:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b0c2b0b612c0fd2962b5a7a01f5978c14974614d6ee7890d32d4788bc94d2416",
                "typeString": "literal_string \"MTX\""
              },
              "value": "MTX"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3679,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 3688,
            "src": "253:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3677,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "253:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 3678,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "276:2:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3686,
              "nodeType": "Block",
              "src": "392:6:12",
              "statements": []
            },
            "documentation": null,
            "id": 3687,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 3682,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8346,
                      "src": "380:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "380:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 3684,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3681,
                  "name": "UpgradeableToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4319,
                  "src": "363:16:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_UpgradeableToken_$4319_$",
                    "typeString": "type(contract UpgradeableToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "363:28:12"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:2:12"
            },
            "returnParameters": {
              "id": 3685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "392:0:12"
            },
            "scope": 3688,
            "src": "342:56:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3689,
        "src": "123:277:12"
      }
    ],
    "src": "0:401:12"
  },
  "legacyAST": {
    "absolutePath": "/Users/maxhoward/Desktop/Ethereum/MatryxPlatform/contracts/MatryxToken/MatryxToken.sol",
    "exportedSymbols": {
      "MatryxToken": [
        3688
      ]
    },
    "id": 3689,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3664,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/Users/maxhoward/Desktop/Ethereum/MatryxPlatform/contracts/MatryxToken/MintableToken.sol",
        "file": "./MintableToken.sol",
        "id": 3665,
        "nodeType": "ImportDirective",
        "scope": 3689,
        "sourceUnit": 3779,
        "src": "25:29:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/maxhoward/Desktop/Ethereum/MatryxPlatform/contracts/MatryxToken/UpgradeableToken.sol",
        "file": "./UpgradeableToken.sol",
        "id": 3666,
        "nodeType": "ImportDirective",
        "scope": 3689,
        "sourceUnit": 4320,
        "src": "55:32:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3667,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3778,
              "src": "147:13:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$3778",
                "typeString": "contract MintableToken"
              }
            },
            "id": 3668,
            "nodeType": "InheritanceSpecifier",
            "src": "147:13:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3669,
              "name": "UpgradeableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4319,
              "src": "162:16:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradeableToken_$4319",
                "typeString": "contract UpgradeableToken"
              }
            },
            "id": 3670,
            "nodeType": "InheritanceSpecifier",
            "src": "162:16:12"
          }
        ],
        "contractDependencies": [
          3778,
          4319,
          4098,
          3916,
          3603,
          3615,
          3542,
          4516
        ],
        "contractKind": "contract",
        "documentation": "Matryx Ethereum token.",
        "fullyImplemented": true,
        "id": 3688,
        "linearizedBaseContracts": [
          3688,
          4319,
          3778,
          3916,
          4098,
          3542,
          3615,
          3603,
          4516
        ],
        "name": "MatryxToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3673,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 3688,
            "src": "183:34:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3671,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "183:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4d6174727978546f6b656e",
              "id": 3672,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "204:13:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d4990ed837f843053004d1f3c23c420f6d540e4987dd7c8438c616e04e528abd",
                "typeString": "literal_string \"MatryxToken\""
              },
              "value": "MatryxToken"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3676,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 3688,
            "src": "221:28:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3674,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "221:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4d5458",
              "id": 3675,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "244:5:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b0c2b0b612c0fd2962b5a7a01f5978c14974614d6ee7890d32d4788bc94d2416",
                "typeString": "literal_string \"MTX\""
              },
              "value": "MTX"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3679,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 3688,
            "src": "253:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3677,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "253:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 3678,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "276:2:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3686,
              "nodeType": "Block",
              "src": "392:6:12",
              "statements": []
            },
            "documentation": null,
            "id": 3687,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 3682,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8346,
                      "src": "380:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "380:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 3684,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3681,
                  "name": "UpgradeableToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4319,
                  "src": "363:16:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_UpgradeableToken_$4319_$",
                    "typeString": "type(contract UpgradeableToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "363:28:12"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:2:12"
            },
            "returnParameters": {
              "id": 3685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "392:0:12"
            },
            "scope": 3688,
            "src": "342:56:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3689,
        "src": "123:277:12"
      }
    ],
    "src": "0:401:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-02-02T22:56:01.877Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "_owner": "address The address which owns the funds.",
          "_spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifing the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Aprove the passed address to spend the specified amount of tokens on behalf of msg.sender.",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "_owner": "The address to query the the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "finishMinting()": {
        "details": "Function to stop minting new tokens.",
        "return": "True if the operation was successful."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "_amount": "The amount of tokens to mint.",
          "_to": "The address that will recieve the minted tokens."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "getUpgradeState()": {
        "notice": "Get the state of the token upgrade."
      },
      "releaseTokenTransfer()": {
        "notice": "One way function to release the tokens to the wild.   * Can be called only from the release agent that is the final ICO contract. It is only called if the crowdsale has been success (first milestone reached)."
      },
      "setReleaseAgent(address)": {
        "notice": "Set the contract that can call release and make the token transferable.   * Design choice. Allow reset the release agent to fix fat finger mistakes."
      },
      "setTransferAgent(address,bool)": {
        "notice": "Owner can allow a particular address (a crowdsale contract) to transfer tokens despite the lock up period."
      },
      "setUpgradeAgent(address)": {
        "notice": "Set an upgrade agent that handles"
      },
      "setUpgradeMaster(address)": {
        "notice": "Change the upgrade master.   * This allows us to set a new owner for the upgrade mechanism."
      },
      "upgrade(uint256)": {
        "notice": "Allow the token holder to upgrade some of their tokens to a new contract."
      }
    },
    "notice": "Matryx Ethereum token."
  }
}